name: Publish to StreamX

on:
  repository_dispatch:
    types:
      - resource-published
jobs:
  check-event-status:
    runs-on: ubuntu-latest
    steps:
      - env:
          CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        run: |
          echo $CLIENT_PAYLOAD
          echo "Status: ${{ github.event.client_payload.status }}"
          echo "Path: ${{ github.event.client_payload.path }}"

  publish-to-streamx:
    if: (github.event.client_payload.status == 200 || github.event.client_payload.status == 204) && endsWith(github.event.client_payload.path, '.md')
    runs-on: ubuntu-latest
    steps:
      - name: Publish to StreamX
        run: |
          sleep 1s
          PAGE_PATH=$(echo "${{ github.event.client_payload.path }}" | sed 's/\.md$//g')
          EDS_PAGE_URL="${{ vars.EDS_DOMAIN_URL }}$PAGE_PATH"
          echo "Page URL: $EDS_PAGE_URL"
          edsResponseCode=$(curl --write-out %{http_code} --silent --output eds_response.txt $EDS_PAGE_URL)
          echo "Status code: ${edsResponseCode}"
          pageHtml=$(cat eds_response.txt | jq . -sR)
          echo "Page HTML: $pageHtml"
          if [ $edsResponseCode != 200 ]; then
            echo "Cannot fetch page from EDS. Status code is $edsResponseCode"
            exit 1
          fi
          streamxApi=${{ vars.STREAMX_PAGE_PUBLICATION_API }}
          streamxKey="$PAGE_PATH"
          echo "StreamX URL: $streamxApi key: $streamxKey"
          streamxResponseCode=$(curl -i -X POST $streamxApi \
            --write-out %{http_code} \
            --insecure \
            --output streamx_response.txt \
            -H "Authorization: Bearer ${{ secrets.STREAMX_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
                   \"key\" : \"$streamxKey\",
                   \"action\" : \"publish\",
                   \"eventTime\" : null,
                   \"properties\" : {
                     \"sx:type\": \"page/blog\"
                   },
                   \"payload\" : {
                     \"dev.streamx.blueprints.data.Page\" : {
                       \"content\" : {
                         \"bytes\" : $pageHtml
                       }
                     }
                   }
                }")
          echo -e "StreamX response:\n$(cat streamx_response.txt)"
          if [ $streamxResponseCode != 202 ]; then
            echo "Cannot publish to StreamX. Status code is: $streamxResponseCode"
            exit 1
          fi
          json_content=$(cat streamx_response.txt)
          key_value=$(echo "$json_content" | grep -o '"success": *{[^}]*}' | grep -o '"key": *"[^"]*"' | sed 's/"key": *"//;s/"//')
          if [[ "$key_value" != "$streamxKey" ]]; then
            echo "Response does not contain success status with expected key"
            exit 1
          fi
        shell: bash
