name: Unpublish from StreamX

on:
  repository_dispatch:
    types:
      - resource-unpublished
jobs:
  check-event-status:
    runs-on: ubuntu-latest
    steps:
      - env:
          CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        run: |
          echo $CLIENT_PAYLOAD
          echo "Status: ${{ github.event.client_payload.status }}"
          echo "Path: ${{ github.event.client_payload.path }}"

  unpublish-from-streamx:
    if: (github.event.client_payload.status == 200 || github.event.client_payload.status == 204) && endsWith(github.event.client_payload.path, '.md')
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up homebrew
        uses: 'Homebrew/actions/setup-homebrew@master'

      - name: Install StreamX via Homebrew
        run: |
          brew install streamx-dev/preview-tap/streamx

      - name: Unpublish from StreamX
        env:
          STREAMX_INGESTION_AUTH_TOKEN: ${{ secrets.STREAMX_TOKEN }}
          STREAMX_INGESTION_BASE_URL: ${{ vars.STREAMX_INGESTION_BASE_URL }}
        run: |
          sleep 1s
          PAGE_PATH=$(echo "${{ github.event.client_payload.path }}" | sed 's/\.md$//g')

          RESULT=$(streamx --accept-license unpublish --ingestion-url=$STREAMX_INGESTION_BASE_URL pages "$PAGE_PATH");
          RESULT_KEY=echo "$RESULT" | grep "Sent data unpublication message to 'pages'" | grep -o "key \'*[^']*\'" | awk -F"\'" '{print $2}';
          if [[ -z "$RESULT_KEY" ]]; then
            echo "Response does not contain success status";
            exit 1;
          fi
          if [[ "$RESULT_KEY" != "$PAGE_PATH" ]]; then
            echo "Response does not contain success status with expected key"
            exit 1
          fi
        shell: bash
